{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar image = require(\"../assets/Background.png\");\n\nvar Screen1 = function (_React$Component) {\n  _inherits(Screen1, _React$Component);\n\n  var _super = _createSuper(Screen1);\n\n  function Screen1(props) {\n    var _this;\n\n    _classCallCheck(this, Screen1);\n\n    _this = _super.call(this, props);\n\n    _this.changebgColor = function (newColor) {\n      _this.setState({\n        bgColor: newColor\n      });\n    };\n\n    _this.color = {\n      red: \"#FF0000\",\n      gray: \"#d3d3d3\",\n      ODgreen: \"#006400\",\n      white: \"#fff\"\n    };\n    _this.state = {\n      name: \"\",\n      bgColor: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Screen1, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsxs(ImageBackground, {\n          source: image,\n          resizeMode: \"cover\",\n          style: styles.image,\n          children: [_jsx(View, {\n            children: _jsx(Text, {\n              style: styles.title,\n              children: \"Howdy Chat\"\n            })\n          }), _jsxs(View, {\n            style: styles.box,\n            children: [_jsx(View, {\n              style: styles.inputBox,\n              children: _jsx(TextInput, {\n                style: {\n                  height: 40,\n                  width: 150,\n                  fontSize: 16,\n                  borderWidth: 0\n                },\n                onChangeText: function onChangeText(name) {\n                  return _this2.setState({\n                    name: name\n                  });\n                },\n                placeholder: \"Your Name\"\n              })\n            }), _jsxs(View, {\n              style: styles.colorBox,\n              children: [_jsx(Text, {\n                style: styles.colorText,\n                children: \"Choose a Color\"\n              }), _jsx(View, {\n                style: styles.colorPalette,\n                children: _jsxs(View, {\n                  style: styles.colorSelection,\n                  children: [_jsx(TouchableOpacity, {\n                    accessible: true,\n                    onPress: function onPress() {\n                      _this2.changebgColor(_this2.color.red);\n                    },\n                    style: styles.colorSelection,\n                    children: _jsx(View, {\n                      style: styles.color1\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    accessible: true,\n                    onPress: function onPress() {\n                      _this2.changebgColor(_this2.color.gray);\n                    },\n                    style: styles.colorSelection,\n                    children: _jsx(View, {\n                      style: styles.color2\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    accessible: true,\n                    onPress: function onPress() {\n                      _this2.changebgColor(_this2.color.ODgreen);\n                    },\n                    style: styles.colorSelection,\n                    children: _jsx(View, {\n                      style: styles.color3\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    accessible: true,\n                    onPress: function onPress() {\n                      _this2.changebgColor(_this2.color.white);\n                    },\n                    style: styles.colorSelection,\n                    children: _jsx(View, {\n                      style: styles.color4\n                    })\n                  })]\n                })\n              })]\n            }), _jsx(Button, {\n              title: \"Set Username\",\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"Chat Screen\", {\n                  name: _this2.state.name,\n                  bgColor: _this2.state.bgColor\n                });\n              }\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Screen1;\n}(React.Component);\n\nexport { Screen1 as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  titlebox: {\n    height: \"44%\",\n    width: \"88%\"\n  },\n  title: {\n    fontSize: 45,\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\",\n    padding: 20\n  },\n  box: {\n    marginBottom: 30,\n    backgroundColor: \"white\",\n    flexGrow: 1,\n    flexShrink: 0,\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 10,\n    height: 260,\n    minHeight: 260,\n    maxHeight: 300,\n    height: \"44%\",\n    width: \"88%\"\n  },\n  inputBox: {\n    flexDirection: \"row\",\n    width: \"88%\",\n    borderColor: \"#757083\",\n    borderWidth: 1,\n    padding: 10\n  },\n  input: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    opacity: 0.5\n  },\n  colorBox: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 20,\n    marginRight: \"auto\",\n    width: \"88%\"\n  },\n  colorText: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    opacity: 1,\n    padding: 5\n  },\n  colorPalette: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    padding: 5\n  },\n  colorSelection: {\n    alignSelf: \"center\",\n    flexDirection: \"row\",\n    borderRadius: 40,\n    borderWidth: 2,\n    borderColor: \"white\"\n  },\n  color1: {\n    flexDirection: \"column\",\n    backgroundColor: \"#FF0000\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2\n  },\n  color2: {\n    flexDirection: \"row\",\n    backgroundColor: \"#d3d3d3\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2\n  },\n  color3: {\n    flexDirection: \"row\",\n    backgroundColor: \"#006400\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2\n  },\n  color4: {\n    flexDirection: \"row\",\n    backgroundColor: \"#ffff\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2\n  },\n  button: {\n    flexDirection: \"column\",\n    backgroundColor: \"#757083\",\n    width: \"88%\"\n  },\n  buttontext: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\",\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/Users/kevinpacker/Documents/GitHub/ChatApp/components/Screen1.js"],"names":["React","TextInput","image","require","Screen1","props","changebgColor","newColor","setState","bgColor","color","red","gray","ODgreen","white","state","name","styles","container","title","box","inputBox","height","width","fontSize","borderWidth","colorBox","colorText","colorPalette","colorSelection","color1","color2","color3","color4","navigation","navigate","Component","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","titlebox","fontWeight","textAlign","padding","marginBottom","backgroundColor","flexGrow","flexShrink","paddingTop","paddingBottom","borderRadius","minHeight","maxHeight","borderColor","input","opacity","marginRight","alignSelf","margin","button","buttontext"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  Button,\n  ImageBackground,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport { TextInput } from \"react-native-gesture-handler\";\n\nconst image = require(\"../assets/Background.png\");\n\nexport default class Screen1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      bgColor: \"\",\n    };\n  }\n\n  changebgColor = (newColor) => {\n    this.setState({ bgColor: newColor });\n  };\n\n  color = {\n    red: \"#FF0000\",\n    gray: \"#d3d3d3\",\n    ODgreen: \"#006400\",\n    white: \"#fff\",\n  };\n  render() {\n    return (\n      <View style={styles.container}>\n        <ImageBackground source={image} resizeMode=\"cover\" style={styles.image}>\n          <View>\n            <Text style={styles.title}>Howdy Chat</Text>\n          </View>\n\n          <View style={styles.box}>\n            <View style={styles.inputBox}>\n              <TextInput\n                style={{\n                  height: 40,\n                  width: 150,\n                  fontSize: 16,\n                  borderWidth: 0,\n                }}\n                onChangeText={(name) => this.setState({ name })}\n                placeholder=\"Your Name\"\n              />\n            </View>\n            <View style={styles.colorBox}>\n              <Text style={styles.colorText}>Choose a Color</Text>\n              <View style={styles.colorPalette}>\n                <View style={styles.colorSelection}>\n                  <TouchableOpacity\n                    accessible={true}\n                    onPress={() => {\n                      this.changebgColor(this.color.red);\n                    }}\n                    style={styles.colorSelection}\n                  >\n                    <View style={styles.color1}></View>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    accessible={true}\n                    onPress={() => {\n                      this.changebgColor(this.color.gray);\n                    }}\n                    style={styles.colorSelection}\n                  >\n                    <View style={styles.color2}></View>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    accessible={true}\n                    onPress={() => {\n                      this.changebgColor(this.color.ODgreen);\n                    }}\n                    style={styles.colorSelection}\n                  >\n                    <View style={styles.color3}></View>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    accessible={true}\n                    onPress={() => {\n                      this.changebgColor(this.color.white);\n                    }}\n                    style={styles.colorSelection}\n                  >\n                    <View style={styles.color4}></View>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n\n            <Button\n              title=\"Set Username\"\n              onPress={() =>\n                this.props.navigation.navigate(\"Chat Screen\", {\n                  name: this.state.name,\n                  bgColor: this.state.bgColor,\n                })\n              }\n            />\n          </View>\n        </ImageBackground>\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  image: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  titlebox: {\n    height: \"44%\",\n    width: \"88%\",\n  },\n  title: {\n    fontSize: 45,\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\",\n    padding: 20,\n  },\n  box: {\n    marginBottom: 30,\n    backgroundColor: \"white\",\n    flexGrow: 1,\n    flexShrink: 0,\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 10,\n    height: 260,\n    minHeight: 260,\n    maxHeight: 300,\n    height: \"44%\",\n    width: \"88%\",\n  },\n  inputBox: {\n    flexDirection: \"row\",\n    width: \"88%\",\n    borderColor: \"#757083\",\n    borderWidth: 1,\n    padding: 10,\n  },\n  input: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    opacity: 0.5,\n  },\n  colorBox: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 20,\n    marginRight: \"auto\",\n    width: \"88%\",\n  },\n  colorText: {\n    fontSize: 16,\n    fontWeight: \"300\",\n    color: \"#757083\",\n    opacity: 1,\n    padding: 5,\n  },\n  colorPalette: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    padding: 5,\n  },\n  colorSelection: {\n    alignSelf: \"center\",\n    flexDirection: \"row\",\n    borderRadius: 40,\n    borderWidth: 2,\n    borderColor: \"white\",\n  },\n  color1: {\n    flexDirection: \"column\",\n    backgroundColor: \"#FF0000\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2,\n  },\n  color2: {\n    flexDirection: \"row\",\n    backgroundColor: \"#d3d3d3\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2,\n  },\n  color3: {\n    flexDirection: \"row\",\n    backgroundColor: \"#006400\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2,\n  },\n  color4: {\n    flexDirection: \"row\",\n    backgroundColor: \"#ffff\",\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 2,\n  },\n  button: {\n    flexDirection: \"column\",\n    backgroundColor: \"#757083\",\n    width: \"88%\",\n  },\n  buttontext: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\",\n    padding: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}