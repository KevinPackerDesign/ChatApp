{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Screen1 from \"./components/Screen1\";\nimport Screen2 from \"./components/Screen2\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { render } from \"react-dom\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar HelloWorld = function (_Component) {\n  _inherits(HelloWorld, _Component);\n\n  var _super = _createSuper(HelloWorld);\n\n  function HelloWorld(props) {\n    var _this;\n\n    _classCallCheck(this, HelloWorld);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      text: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HelloWorld, [{\n    key: \"alertMyText\",\n    value: function alertMyText() {\n      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      Alert.alert(input.text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsx(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            flexDirection: \"column\"\n          },\n          children: _jsxs(Stack.Navigator, {\n            initialRouteName: \"Screen1\",\n            children: [_jsx(Stack.Screen, {\n              name: \"Howdy Chat\",\n              component: Screen1\n            }), _jsx(Stack.Screen, {\n              name: \"Chat Screen\",\n              component: Screen2\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return HelloWorld;\n}(Component);\n\nexport { HelloWorld as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  box1: {\n    flex: 10,\n    backgroundColor: \"blue\"\n  },\n  box2: {\n    flex: 120,\n    backgroundColor: \"red\"\n  },\n  box3: {\n    flex: 50,\n    backgroundColor: \"green\"\n  }\n});","map":{"version":3,"sources":["/Users/kevinpacker/Documents/GitHub/ChatApp/App.js"],"names":["React","Component","StatusBar","Screen1","Screen2","NavigationContainer","createStackNavigator","render","Stack","HelloWorld","props","state","text","input","Alert","alert","flex","justifyContent","flexDirection","styles","StyleSheet","create","container","box1","backgroundColor","box2","box3"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;;;;;;AAUA,SAASC,MAAT,QAAuB,WAAvB;;;AAEA,IAAMC,KAAK,GAAGF,oBAAoB,EAAlC;;IACqBG,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFiB;AAGlB;;;;WACD,uBAAwB;AAAA,UAAZC,KAAY,uEAAJ,EAAI;AACtBC,MAAAA,KAAK,CAACC,KAAN,CAAYF,KAAK,CAACD,IAAlB;AACD;;;WAED,kBAAS;AACP,aACE,KAAC,mBAAD;AAAA,kBACE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEI,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,cAAc,EAAE,QAA3B;AAAqCC,YAAAA,aAAa,EAAE;AAApD,WADT;AAAA,oBAGE,MAAC,KAAD,CAAO,SAAP;AAAiB,YAAA,gBAAgB,EAAC,SAAlC;AAAA,uBACE,KAAC,KAAD,CAAO,MAAP;AAAc,cAAA,IAAI,EAAC,YAAnB;AAAgC,cAAA,SAAS,EAAEf;AAA3C,cADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,cAAA,IAAI,EAAC,aAAnB;AAAiC,cAAA,SAAS,EAAEC;AAA5C,cAFF;AAAA;AAHF;AADF,QADF;AAYD;;;;EAtBqCH,S;;SAAnBQ,U;AAyBrB,IAAMU,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETE,IAAAA,aAAa,EAAE;AAFN,GADoB;AAK/BK,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAE,EADF;AAEJQ,IAAAA,eAAe,EAAE;AAFb,GALyB;AAS/BC,EAAAA,IAAI,EAAE;AACJT,IAAAA,IAAI,EAAE,GADF;AAEJQ,IAAAA,eAAe,EAAE;AAFb,GATyB;AAa/BE,EAAAA,IAAI,EAAE;AACJV,IAAAA,IAAI,EAAE,EADF;AAEJQ,IAAAA,eAAe,EAAE;AAFb;AAbyB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Screen1 from \"./components/Screen1\";\nimport Screen2 from \"./components/Screen2\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Button,\n  Alert,\n  ScrollView,\n} from \"react-native\";\nimport { render } from \"react-dom\";\n\nconst Stack = createStackNavigator();\nexport default class HelloWorld extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: \"\" };\n  }\n  alertMyText(input = []) {\n    Alert.alert(input.text);\n  }\n\n  render() {\n    return (\n      <NavigationContainer>\n        <View\n          style={{ flex: 1, justifyContent: \"center\", flexDirection: \"column\" }}\n        >\n          <Stack.Navigator initialRouteName=\"Screen1\">\n            <Stack.Screen name=\"Howdy Chat\" component={Screen1} />\n            <Stack.Screen name=\"Chat Screen\" component={Screen2} />\n          </Stack.Navigator>\n        </View>\n      </NavigationContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n  },\n  box1: {\n    flex: 10,\n    backgroundColor: \"blue\",\n  },\n  box2: {\n    flex: 120,\n    backgroundColor: \"red\",\n  },\n  box3: {\n    flex: 50,\n    backgroundColor: \"green\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}