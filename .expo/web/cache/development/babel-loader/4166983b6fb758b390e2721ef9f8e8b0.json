{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { GiftedChat, Bubble } from \"react-native-gifted-chat\";\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Screen2 = function (_React$Component) {\n  _inherits(Screen2, _React$Component);\n\n  var _super = _createSuper(Screen2);\n\n  function Screen2() {\n    var _this;\n\n    _classCallCheck(this, Screen2);\n\n    _this = _super.call(this);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: {\n            uid: data.user.uid,\n            name: data.user.name,\n            avatar: data.user.avatar\n          }\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.state = {\n      messages: [],\n      _id: 0,\n      user: {\n        uid: \"\",\n        name: \"\",\n        avatar: \"\"\n      },\n      isConnected: false\n    };\n    var firebaseConfig = {\n      apiKey: \"AIzaSyBr4yau5Da4bWowcQGDXmGwplnaPhm8shE\",\n      authDomain: \"chatapp-e1ac5.firebaseapp.com\",\n      projectId: \"chatapp-e1ac5\",\n      storageBucket: \"chatapp-e1ac5.appspot.com\",\n      messagingSenderId: \"745622530335\",\n      appId: \"1:745622530335:web:48a31625cf0a0ea0a3282a\",\n      measurementId: \"G-30BR6JSJNX\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    console.log(_this.referenceChatMessages);\n    _this.refMsgsUser = null;\n    return _this;\n  }\n\n  _createClass(Screen2, [{\n    key: \"addMessage\",\n    value: function addMessage() {\n      var data = this.state.messages[0];\n      this.referenceChatMessages.add({\n        _id: data._id,\n        text: data.text,\n        createdAt: data.createdAt.toDate(),\n        user: {\n          uid: data.user.uid,\n          name: data.user.name,\n          avatar: data.user.avatar\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.authUnsubscribe = firebase.auth().onAuthStateChanged(function _callee(user) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!user) {\n                  firebase.auth().signInAnonymously();\n                }\n\n                _this2.setState({\n                  uid: user.uid,\n                  messages: []\n                });\n\n                _this2.unsubscribe = _this2.referenceChatMessages.orderBy(\"createdAt\", \"desc\").onSnapshot(_this2.onCollectionUpdate);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, {\n    key: \"componentWillUnmout\",\n    value: function componentWillUnmout() {\n      this.authUnsubscribe();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n      this.addMessage();\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: \"#000\"\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var name = this.props.route.params.name;\n      var bgColor = this.props.route.params.bgColor;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          backgroundColor: bgColor ? bgColor : \"#fff\"\n        },\n        children: [_jsx(GiftedChat, {\n          renderBubble: this.renderBubble.bind(this),\n          messages: this.state.messages,\n          onSend: function onSend(messages) {\n            return _this3.onSend(messages);\n          },\n          user: {\n            _id: 1\n          }\n        }), Platform.OS === \"android\" ? _jsx(KeyboardAvoidingView, {\n          behavior: \"height\"\n        }) : null]\n      });\n    }\n  }]);\n\n  return Screen2;\n}(React.Component);\n\nexport { Screen2 as default };","map":{"version":3,"sources":["/Users/kevinpacker/Documents/GitHub/ChatApp/components/Screen2.js"],"names":["React","GiftedChat","Bubble","firebase","Screen2","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","createdAt","toDate","user","uid","name","avatar","setState","state","isConnected","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","referenceChatMessages","firestore","collection","console","log","refMsgsUser","add","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","unsubscribe","orderBy","onSnapshot","previousState","append","addMessage","props","right","backgroundColor","route","params","bgColor","navigation","setOptions","title","flex","justifyContent","renderBubble","bind","onSend","Platform","OS","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Platform,\n  KeyboardAvoidingView,\n  Text,\n  StyleSheet,\n} from \"react-native\";\nimport { GiftedChat, Bubble } from \"react-native-gifted-chat\";\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nexport default class Screen2 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      _id: 0,\n      user: {\n        uid: \"\",\n        name: \"\",\n        avatar: \"\",\n      },\n      isConnected: false,\n    };\n\n    const firebaseConfig = {\n      apiKey: \"AIzaSyBr4yau5Da4bWowcQGDXmGwplnaPhm8shE\",\n      authDomain: \"chatapp-e1ac5.firebaseapp.com\",\n      projectId: \"chatapp-e1ac5\",\n      storageBucket: \"chatapp-e1ac5.appspot.com\",\n      messagingSenderId: \"745622530335\",\n      appId: \"1:745622530335:web:48a31625cf0a0ea0a3282a\",\n      measurementId: \"G-30BR6JSJNX\",\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n    this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    console.log(this.referenceChatMessages);\n    this.refMsgsUser = null;\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const messages = [];\n    // go through each document\n    querySnapshot.forEach((doc) => {\n      // get the QueryDocumentSnapshot's data\n      var data = doc.data();\n      messages.push({\n        _id: data._id,\n        text: data.text,\n        createdAt: data.createdAt.toDate(),\n        user: {\n          uid: data.user.uid,\n          name: data.user.name,\n          avatar: data.user.avatar,\n        },\n      });\n    });\n    this.setState({\n      messages: messages,\n    });\n  };\n\n  addMessage() {\n    let data = this.state.messages[0];\n    this.referenceChatMessages.add({\n      _id: data._id,\n      text: data.text,\n      createdAt: data.createdAt.toDate(),\n      user: {\n        uid: data.user.uid,\n        name: data.user.name,\n        avatar: data.user.avatar,\n      },\n    });\n  }\n\n  componentDidMount() {\n    this.authUnsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\n      if (!user) {\n        firebase.auth().signInAnonymously();\n      }\n      this.setState({\n        uid: user.uid,\n        messages: [],\n      });\n\n      this.unsubscribe = this.referenceChatMessages\n        .orderBy(\"createdAt\", \"desc\")\n        .onSnapshot(this.onCollectionUpdate);\n    });\n  }\n  componentWillUnmout() {\n    this.authUnsubscribe();\n    this.unsubscribe();\n  }\n\n  onSend(messages = []) {\n    this.setState((previousState) => ({\n      messages: GiftedChat.append(previousState.messages, messages),\n    }));\n    this.addMessage();\n  }\n\n  renderBubble(props) {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: \"#000\",\n          },\n        }}\n      />\n    );\n  }\n\n  render() {\n    let name = this.props.route.params.name;\n    const { bgColor } = this.props.route.params;\n\n    this.props.navigation.setOptions({ title: name });\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n\n          backgroundColor: bgColor ? bgColor : \"#fff\",\n        }}\n      >\n        <GiftedChat\n          renderBubble={this.renderBubble.bind(this)}\n          messages={this.state.messages}\n          onSend={(messages) => this.onSend(messages)}\n          user={{\n            _id: 1,\n          }}\n        />\n        {Platform.OS === \"android\" ? (\n          <KeyboardAvoidingView behavior=\"height\" />\n        ) : null}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}